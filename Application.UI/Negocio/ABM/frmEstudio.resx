<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAB7AAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAA
        AMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAA
        AMwAAADMAAAAzAAAAHoAAAAAAAAAAAAAAEAAAAB3AAAAdwAAANUAAADAAAAAdwAAAHcAAAB3AAAAdwAA
        AHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAA
        AHcAAADAAAAA1QAAAHcAAAB3AAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAIkAAAADAAAASwAA
        AFUAAABVAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAA
        AFUAAABKAAAAAgAAAIkAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAiQAA
        ADYAAAD/AAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAA
        AO4AAADuAAAA7gAAAP8AAAA2AAAAiQAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ALAAAACJAAAAOwAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAADsAAACJAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAsAAAAIkAAAA7AAAA/wAAAAAAAAAcAAAAvQAAACMAAAAAAAAAAAAAABsAAADTAAAA3QAA
        AN0AAADdAAAA3QAAAN0AAADdAAAAhwAAAAAAAAD/AAAAOwAAAIkAAACwAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACwAAAAiQAAADsAAAD/AAAAAAAAAKgAAAD9AAAAlgAAAAAAAAAAAAAABQAA
        AF0AAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAAAyAAAAAAAAAP8AAAA7AAAAiQAAALAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAACJAAAAOwAAAP8AAAAAAAAAFAAAAFUAAAD1AAAAFAAA
        AAAAAAAFAAAAXQAAAGYAAABmAAAAZgAAAGYAAABmAAAAZgAAADIAAAAAAAAA/wAAADsAAACJAAAAsAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAIkAAAA7AAAA/wAAAAAAAAAAAAAAAgAA
        AK8AAAAoAAAAAAAAABsAAADUAAAA3QAAAN0AAADdAAAA3QAAAN0AAADdAAAAiAAAAAAAAAD/AAAAOwAA
        AIkAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAiQAAADsAAAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAA7AAAAiQAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAACJAAAAOwAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA/wAAADsAAACJAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAA
        AIkAAAA7AAAA/wAAAAAAAAAAAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAEQAAABEAAAARAAAAEQAA
        ABEAAAARAAAABAAAAAAAAAD/AAAAOwAAAIkAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACwAAAAiQAAADsAAAD/AAAAAAAAAD0AAAD0AAAAOwAAAAAAAAAAAAAAIAAAAP0AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACnAAAAAAAAAP8AAAA7AAAAiQAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAALAAAACJAAAAOwAAAP8AAAAAAAAAmwAAAOQAAACxAAAAAAAAAAAAAAAAAAAAHAAA
        ACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAAAwAAAAAAAAA/wAAADsAAACJAAAAsAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAIkAAAA7AAAA/wAAAAAAAAAAAAAANQAAAP0AAAAjAAAAAAAA
        ABAAAACTAAAAmQAAAJkAAACZAAAAmQAAAJkAAACZAAAAXAAAAAAAAAD/AAAAOwAAAIkAAACwAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAiQAAADsAAAD/AAAAAAAAAAAAAAAAAAAAdQAA
        ABgAAAAAAAAAEAAAAJMAAACZAAAAmQAAAJkAAACZAAAAmQAAAJkAAABcAAAAAAAAAP8AAAA7AAAAiQAA
        ALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAACJAAAAOwAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        ADsAAACJAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAIkAAAA7AAAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5AAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAAOwAAAIkAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAiQAA
        ADsAAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ0AAACdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAP8AAAA7AAAAiQAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ALAAAACJAAAAOwAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYAAACqAAAA3gAAAN4AAACqAAAANQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAADsAAACJAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAsAAAAIkAAAA7AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAIcAAADRAAAA0QAA
        AIcAAAAlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAAOwAAAIkAAACwAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACwAAAAiQAAADsAAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AJsAAACbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAA7AAAAiQAAALAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAACJAAAAOwAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAIwAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAADsAAACJAAAAsAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAIkAAAA7AAAA/wAAAGYAAABmAAAAZgAA
        AGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAAD/AAAAOwAA
        AIkAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAiQAAAB4AAADUAAAA3QAA
        AN0AAADdAAAA+gAAAPIAAADdAAAA3QAAAN0AAADdAAAA3QAAAN0AAADyAAAA+gAAAN0AAADdAAAA3QAA
        ANQAAAAdAAAAiQAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAACJAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADpAAAAVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFYAAADpAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACJAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAA
        APcAAADuAAAA7gAAAO4AAADuAAAA7gAAAP4AAADzAAAA7gAAAO4AAADuAAAA7gAAAKYAAAAAAAAATwAA
        AP4AAADuAAAA7gAAAO4AAADuAAAA7gAAAPcAAACrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAgAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAA8gAAAIkAAABVAAAAVQAAAFUAAABVAAAALQAA
        AAAAAABPAAAA8gAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADrAAAAoQAAAHcAAAB3AAAAdwAA
        AHcAAAB3AAAAdwAAAKEAAADrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJwAAADMAAAAzAAA
        AMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////4AAAAGAAAAB8AAAD/AAAA/w//8P8IwBD/CMAQ/whAEP8MQBD/D/
        /w/w//8P8N4BD/CMAQ/wjgEP8MQBD/DkAQ/w//8P8P5/D/D+fw/w+B8P8PgfD/D+fw/w/n8P8AAAD/AA
        AA/z5+fP8AAgD/AAIA//4Af//+AH//////97InN0YXR1cyI6MCwibXNnIjoiRXJyb3IiLCJyZWRpcmVj
        dCI6IiJ9
</value>
  </data>
</root>