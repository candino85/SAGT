<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAADFAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD5AAAATwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUAAAB3AAAAdwAAAHcAAAB3AAAAdwAA
        AHcAAAADAAAAAAAAAP8AAAD+AAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA9QAA
        AP8AAACDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkwAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAAYAAAAAAAAA/wAAAPEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABtAAAA/wAAAIMAAAAAAAAAfgAAAIgAAACIAAAAiAAAAIgAAACIAAAAXAAAAAAAAACTAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAABgAAAAAAAAD/AAAA8QAAAAAAAABFAAAAtwAAALsAAAC7AAAAuwAA
        ALsAAACcAAAABgAAAG0AAAD/AAAAgwAAAAAAAADsAAAA/wAAAP8AAAD/AAAA/wAAAP8AAACsAAAAAAAA
        AJMAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAGAAAAAAAAAP8AAADxAAAAAAAAALEAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAA2AAAAbQAAAP8AAACDAAAAAAAAAOwAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AKwAAAAAAAAAkwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAAYAAAAAAAAA/wAAAPEAAAAAAAAAswAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAADkAAABtAAAA/wAAAL0AAAB3AAAA9QAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA0wAAAHcAAADGAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAABgAAAAAAAAD/AAAA8QAA
        AAAAAACzAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAOQAAAG0AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAGAAAAAAAA
        AP8AAADxAAAAAAAAALMAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAA5AAAAbQAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAwgAAACIAAAAiAAAAIgAA
        AAEAAAAAAAAA/wAAAPEAAAAAAAAAswAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAADkAAABtAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADjAAAAmQAA
        AJkAAACZAAAAmQAAAJkAAAD/AAAA8QAAAAAAAACaAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD9AAAAIQAA
        AG0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADxAAAAAAAAAAYAAAAyAAAAMwAAADMAAAAzAAAAMwAA
        AB8AAAAAAAAAbQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPcAAABmAAAAZgAAAGYAAABmAAAAZgAA
        AGYAAABmAAAAZgAAAGYAAACnAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD5AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAlQAAACIAAAAiAAAAIgAAACIAAAAiAAAAMAAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAFIAAACIAAAAiAAA
        AIgAAACIAAAAiAAAAJIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACFAAAAAAAAABcAAABEAAAARAAA
        AEQAAABQAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAIUAAAAAAAAAWAAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAhQAA
        AAAAAABYAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAIkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAACFAAAAAAAAAFgAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAiQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAIUAAAAAAAAAWAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAACJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAiAAAAIgAAACIAAAAiAAAAIgAAACSAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAhQAAAAAAAABYAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAMgAAACIAAAAiAAAAIgAAACIAAAATwAAAPkAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACCAAAAAAAAAFgAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD4AAAA/wAAAPcAAABmAAAAZgAA
        AGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAACnAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAB4AAAArgAA
        AP8AAACnAAAAZgAAAGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAABmAAAA9wAAAP4AAAD/AAAA8QAA
        AAAAAAAGAAAAMgAAADMAAAAzAAAAMwAAADMAAAAfAAAAAAAAAG0AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        ADUAAACFAAAA/wAAAGwAAAAAAAAAHwAAADMAAAAzAAAAMwAAADMAAAAyAAAABgAAAAAAAADyAAAA/gAA
        AP8AAADxAAAAAAAAAJoAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP0AAAAhAAAAbQAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAANQAAAIUAAAD/AAAAbAAAACIAAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACZAAAAAAAA
        APIAAAD+AAAA/wAAAPEAAAAAAAAAswAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAADkAAABtAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAA1AAAAhQAAAP8AAABsAAAAOgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        ALIAAAAAAAAA8gAAAP4AAAD/AAAA8QAAAAAAAACzAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAOQAA
        AG0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAADUAAACFAAAA/wAAAGwAAAA6AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAsgAAAAAAAADyAAAA/gAAAP8AAADxAAAAAAAAALMAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAA5AAAAbQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA8gAAAPcAAAD/AAAAbAAAADoAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACyAAAAAAAAAPIAAAD+AAAA/wAAAPEAAAAAAAAAswAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAADkAAABtAAAA/wAAAM4AAAClAAAA/wAAAP8AAAD/AAAA/wAAAP8AAABsAAAAOgAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAALIAAAAAAAAA8gAAAP4AAAD/AAAA8QAAAAAAAACxAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAANgAAAG0AAAD/AAAAhAAAAB4AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AGwAAAA4AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAsAAAAAAAAADyAAAA/gAAAP8AAADxAAAAAAAA
        AEUAAACpAAAAqgAAAKoAAACqAAAAqgAAAJYAAAAGAAAAbQAAAP8AAACEAAAAHgAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAbAAAAAYAAACXAAAAqgAAAKoAAACqAAAAqgAAAKkAAABEAAAAAAAAAPIAAAD+AAAA/wAA
        APEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABtAAAA/wAAAIQAAAAeAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAABsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8gAA
        AP4AAAD/AAAA/gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAPUAAAD/AAAAhAAA
        AB4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPUAAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAA
        AO4AAAD+AAAA/gAAAMYAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        APkAAABQAAAAFAAAAKoAAACqAAAAqgAAALEAAAD5AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADDAAP+AQAD/gE/4gIBIAICASACAgEgAAABIAAAASAAAAEgAAAAIAAAACAg
        AAAAAAAAAAAAAAACAAD8AgAA/AIAH/wCAB/8AgAfAAIAAAACAAAAAAAAICAEBCAAAAQgAAAEIAAABCAA
        AAQgAAAEIAAABCAAAAQ/4Af8AAAAAAAAAAB7InN0YXR1cyI6MCwibXNnIjoiRXJyb3IiLCJyZWRpcmVj
        dCI6IiJ9
</value>
  </data>
</root>